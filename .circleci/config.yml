# @see https://github.com/AlexSkrypnyk/drupal_extension_scaffold
version: 2

aliases:
  # Default git branch name used for deploying tagged releases.
  - &default_branch "1.x"

  # SSH deployment key fingerprint from CircleCI App -> Project -> Settings -> SSH Permissions.
  # Replace with the value used for your project.
  - &deploy_ssh_key_fingerprint "82:3d:00:0b:fb:2f:d0:98:7c:c5:4b:73:63:b1:06:98"

  # Configuration for shared runner containers, applied to each job.
  - &container_config
    working_directory: ~/project
    docker:
      - image: cimg/php:8.2-browsers

job-test: &job-test
  steps:
    - checkout

    - run:
        name: Upgrade sqlite3
        command: |
          wget https://www.sqlite.org/2024/sqlite-autoconf-3450300.tar.gz -O /tmp/sqlite.tar.gz
          tar -xzf /tmp/sqlite.tar.gz -C /tmp
          cd /tmp/sqlite-autoconf-3450300
          ./configure CFLAGS="-DSQLITE_ENABLE_COLUMN_METADATA=1" --prefix=/usr/local
          make && sudo make install
          sudo ldconfig
          echo "export LD_LIBRARY_PATH=/usr/local/lib" >> $BASH_ENV

    - run:
        name: Install PCOV
        command: |
          sudo pecl install pcov
          echo "extension=pcov.so" | sudo tee -a /usr/local/etc/php/conf.d/pcov.ini
          echo "pcov.enabled=1" | sudo tee -a /usr/local/etc/php/conf.d/pcov.ini

    - run:
        name: Assemble the codebase
        command: .devtools/assemble.sh

    - run:
        name: Start built-in PHP server
        command: .devtools/start.sh

    - run:
        name: Provision site
        command: .devtools/provision.sh

    - run:
        name: Lint code with PHPCS
        command: vendor/bin/phpcs || [ "${CI_PHPCS_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build

    - run:
        name: Lint code with PHPStan
        command: vendor/bin/phpstan || [ "${CI_PHPSTAN_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build

    - run:
        name: Lint code with Rector
        command: vendor/bin/rector --clear-cache --dry-run || [ "${CI_RECTOR_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build

    - run:
        name: Lint code with PHPMD
        command: vendor/bin/phpmd . text phpmd.xml || [ "${CI_PHPMD_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build

    - run:
        name: Lint code with Twig CS Fixer
        command: vendor/bin/twig-cs-fixer || [ "${CI_TWIGCSFIXER_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build

    - run:
        name: Run tests
        command: vendor/bin/phpunit || [ "${CI_TEST_IGNORE_FAILURE:-0}" -eq 1 ]
        working_directory: build
        environment:
          BROWSERTEST_OUTPUT_DIRECTORY: /tmp

    - store_test_results:
        path: .logs/test_results

    - store_artifacts:
        path: build/web/sites/simpletest/browser_output

    - store_artifacts:
        path: .logs/coverage

    - run:
        name: Upload code coverage reports to Codecov
        command: |
          if [ -z "${CIRCLE_TAG-}" ] && [ -n "${CODECOV_TOKEN-}" ] && [ -d .logs/coverage/phpunit ]; then
            curl -Os https://cli.codecov.io/latest/linux/codecov && sudo chmod +x codecov
            ./codecov --verbose upload-process --fail-on-error -n "circleci-$CIRCLE_JOB" -s .logs/coverage
          fi

jobs:
  test-php-8.2:
    <<: *container_config
    docker:
      - image: cimg/php:8.2-browsers
    environment:
      DRUPAL_VERSION: 10.1
      DRUPAL_PROJECT_SHA: 10.x
    <<: *job-test

  test-php-8.2-legacy:
    <<: *container_config
    docker:
      - image: cimg/php:8.2-browsers
    environment:
      DRUPAL_VERSION: 10.1
      DRUPAL_PROJECT_SHA: 10.x
    <<: *job-test

  test-php-8.2-next:
    <<: *container_config
    docker:
      - image: cimg/php:8.2-browsers
    environment:
      DRUPAL_VERSION: 11@alpha
      DRUPAL_PROJECT_SHA: 11.x
    <<: *job-test

  test-php-8.3:
    <<: *container_config
    docker:
      - image: cimg/php:8.3-browsers
    environment:
      DRUPAL_VERSION: stable
      DRUPAL_PROJECT_SHA: 10.x
    <<: *job-test

  test-php-8.3-next:
    <<: *container_config
    docker:
      - image: cimg/php:8.3-browsers
    environment:
      DRUPAL_VERSION: 11@alpha
      DRUPAL_PROJECT_SHA: 11.x
    <<: *job-test

  deploy:
    <<: *container_config
    environment:
      DEPLOY_SSH_KEY_FINGERPRINT: *deploy_ssh_key_fingerprint
      DEFAULT_BRANCH: *default_branch
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - *deploy_ssh_key_fingerprint

      - run:
          name: Deploy
          command: DEPLOY_BRANCH=${DEPLOY_BRANCH:-${CIRCLE_BRANCH:-${DEFAULT_BRANCH}}} .devtools/deploy.sh

workflows:
  version: 2
  commit:
    jobs:
      - test-php-8.2:
          filters:
            tags:
              only: /.*/
      - test-php-8.2-legacy:
          filters:
            tags:
              only: /.*/
# Enable D11 once https://www.drupal.org/project/config_filter/issues/3428542 is resolved
#      - test-php-8.2-next:
#          filters:
#            tags:
#              only: /.*/
      - test-php-8.3:
          filters:
            tags:
              only: /.*/
#      - test-php-8.3-next:
#          filters:
#            tags:
#              only: /.*/
      - deploy:
          requires:
            - test-php-8.2
            - test-php-8.2-legacy
            #- test-php-8.2-next
            - test-php-8.3
            #- test-php-8.3-next
          filters:
            tags:
              only: /.*/
            branches:
              # 1.0.x, 2.3.x, 9.x, 10.x, 9.x-2.x, ci, ci-test
              only: /^[0-9]+.[0-9]+.x$|^[0-9]+.x(?:\-[0-9]+\.x)?$|^ci.*/
